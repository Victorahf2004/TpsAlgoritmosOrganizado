Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 42.89      0.03     0.03  9027029     0.00     0.00  Ponto2d::Ponto2d()
 42.89      0.06     0.03  2576991     0.00     0.00  Ponto2d::calcularAngulo(Ponto2d)
 14.30      0.07     0.01  2621050     0.00     0.00  Ponto2d::get_Y() const
  0.00      0.07     0.00  3827281     0.00     0.00  vector<Ponto2d>::operator[](int)
  0.00      0.07     0.00  3650389     0.00     0.00  Ponto2d::get_X() const
  0.00      0.07     0.00  1549423     0.00     0.00  vector<Ponto2d>::size() const
  0.00      0.07     0.00   110383     0.00     0.00  vector<Ponto2d>::iterator::operator<=(vector<Ponto2d>::iterator const&) const
  0.00      0.07     0.00    64873     0.00     0.00  vector<Ponto2d>::iterator::operator*() const
  0.00      0.07     0.00    39569     0.00     0.00  FechoConvexo::getBinaryDigit(float, int)
  0.00      0.07     0.00    28226     0.00     0.00  vector<Ponto2d>::iterator::iterator(Ponto2d*)
  0.00      0.07     0.00    27968     0.00     0.00  vector<Ponto2d>::iterator::operator==(vector<Ponto2d>::iterator const&) const
  0.00      0.07     0.00    26986     0.00     0.00  vector<Ponto2d>::push_back(Ponto2d const&)
  0.00      0.07     0.00    23200     0.00     0.00  vector<Ponto2d>::iterator::operator!=(vector<Ponto2d>::iterator const&) const
  0.00      0.07     0.00    20453     0.00     0.00  vector<Ponto2d>::iterator::operator++()
  0.00      0.07     0.00    18101     0.00     0.00  vector<Ponto2d>::iterator::operator++(int)
  0.00      0.07     0.00    14983     0.00     0.00  vector<Ponto2d>::iterator::operator-(int) const
  0.00      0.07     0.00    13899     0.00     0.00  vector<Ponto2d>::iterator::operator--(int)
  0.00      0.07     0.00    11988     0.00     0.00  Ponto2d::calcularAnguloNegativo(Ponto2d)
  0.00      0.07     0.00    11019     0.00     0.00  vector<Ponto2d>::operator[](int) const
  0.00      0.07     0.00     7278     0.00     0.00  std::remove_reference<Ponto2d&>::type&& std::move<Ponto2d&>(Ponto2d&)
  0.00      0.07     0.00     6994     0.00     0.00  vector<Ponto2d>::iterator::operator+(int) const
  0.00      0.07     0.00     5942     0.00     0.00  FechoConvexo::curvaEsquerda(Ponto2d, Ponto2d, Ponto2d)
  0.00      0.07     0.00     4997     0.00     0.00  vector<Ponto2d>::begin() const
  0.00      0.07     0.00     2950     0.00     0.00  vector<Ponto2d>::pop_back()
  0.00      0.07     0.00     2426     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Ponto2d> >, std::is_move_constructible<Ponto2d>, std::is_move_assignable<Ponto2d> >::value, void>::type std::swap<Ponto2d>(Ponto2d&, Ponto2d&)
  0.00      0.07     0.00     1998     0.00     0.01  vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&)
  0.00      0.07     0.00     1998     0.00     0.00  vector<Ponto2d>::iterator::operator-(vector<Ponto2d>::iterator const&) const
  0.00      0.07     0.00     1252     0.00     0.00  vector<Ponto2d>::end() const
  0.00      0.07     0.00     1011     0.00     0.01  vector<Ponto2d>::vector()
  0.00      0.07     0.00     1000     0.00     0.00  Ponto2d::Ponto2d(int, int)
  0.00      0.07     0.00      999     0.00     0.01  FechoConvexo::merge(vector<Ponto2d>&, vector<Ponto2d>&)
  0.00      0.07     0.00      124     0.00     0.00  Ponto2d::calcularDist(Ponto2d)
  0.00      0.07     0.00       17     0.00     0.00  Ponto2d::imprimir()
  0.00      0.07     0.00       12     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const
  0.00      0.07     0.00        8     0.00     0.00  std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const
  0.00      0.07     0.00        8     0.00     0.00  std::chrono::duration<double, std::ratio<1l, 1l> >::count() const
  0.00      0.07     0.00        8     0.00     0.00  std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00      0.07     0.00        4     0.00     0.00  std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      0.07     0.00        4     0.00     0.00  std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      0.07     0.00        4     0.00     0.00  std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      0.07     0.00        4     0.00     0.00  std::chrono::duration<double, std::ratio<1l, 1l> >::duration<double, void>(double const&)
  0.00      0.07     0.00        4     0.00     0.00  std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
  0.00      0.07     0.00        4     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
  0.00      0.07     0.00        4     0.00     0.00  std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  0.00      0.07     0.00        4     0.00     0.00  std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00      0.07     0.00        4     0.00     0.00  std::setprecision(int)
  0.00      0.07     0.00        4     0.00     0.00  std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00      0.07     0.00        4     0.00     0.00  std::operator~(std::_Ios_Fmtflags)
  0.00      0.07     0.00        4     0.00     0.00  std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  0.00      0.07     0.00        4     0.00     0.00  std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  0.00      0.07     0.00        3     0.00     0.00  FechoConvexo::XMenor(vector<Ponto2d> const&, int)
  0.00      0.07     0.00        3     0.00     0.01  FechoConvexo::YMenor(vector<Ponto2d> const&)
  0.00      0.07     0.00        2     0.00     0.00  FechoConvexo::YMaior(vector<Ponto2d> const&)
  0.00      0.07     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN12FechoConvexo6XMenorERK6vectorI7Ponto2dEi
  0.00      0.07     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN7Ponto2dC2Ev
  0.00      0.07     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.07     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.07     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.07     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.07     0.00        1     0.00     0.07  FechoConvexo::JarvisLeft(vector<Ponto2d>)
  0.00      0.07     0.00        1     0.00    30.17  FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int)
  0.00      0.07     0.00        1     0.00     0.61  FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d)
  0.00      0.07     0.00        1     0.00    30.21  FechoConvexo::GrahamMerge(vector<Ponto2d>)
  0.00      0.07     0.00        1     0.00    16.11  FechoConvexo::GrahamRadix(vector<Ponto2d>)
  0.00      0.07     0.00        1     0.00     0.36  FechoConvexo::JarvisRight(vector<Ponto2d>)
  0.00      0.07     0.00        1     0.00    15.43  FechoConvexo::temAngIgual()
  0.00      0.07     0.00        1     0.00    15.46  FechoConvexo::temAngIgual2(vector<Ponto2d>&, Ponto2d)
  0.00      0.07     0.00        1     0.00    23.20  FechoConvexo::InsertionSort()
  0.00      0.07     0.00        1     0.00    23.24  FechoConvexo::GrahamInsertion()
  0.00      0.07     0.00        1     0.00     0.01  FechoConvexo::temElemRepetido()
  0.00      0.07     0.00        1     0.00     0.44  FechoConvexo::Jarvis()
  0.00      0.07     0.00        1     0.00    30.17  FechoConvexo::MergeSort(vector<Ponto2d>&)
  0.00      0.07     0.00        1     0.00     0.00  FechoConvexo::RemoverP0()
  0.00      0.07     0.00        1     0.00     0.61  FechoConvexo::radixSort(vector<Ponto2d>&, Ponto2d)
  0.00      0.07     0.00        1     0.00     0.04  FechoConvexo::FechoConvexo(vector<Ponto2d>)
  0.00      0.07     0.00        1     0.00     0.00  vector<Ponto2d>::erase(vector<Ponto2d>::iterator)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 14.28% of 0.07 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]    100.0    0.00    0.07                 main [1]
                0.00    0.03       1/1           FechoConvexo::GrahamMerge(vector<Ponto2d>) [3]
                0.00    0.02       1/1           FechoConvexo::GrahamInsertion() [7]
                0.00    0.02       1/1           FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
                0.00    0.00       1/1           FechoConvexo::Jarvis() [18]
                0.00    0.00       1/1           FechoConvexo::FechoConvexo(vector<Ponto2d>) [23]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00    1000/1000        Ponto2d::Ponto2d(int, int) [58]
                0.00    0.00    1000/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
                0.00    0.00       4/4           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [69]
                0.00    0.00       4/4           std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [66]
                0.00    0.00       4/8           std::chrono::duration<double, std::ratio<1l, 1l> >::count() const [62]
                0.00    0.00       4/4           std::setprecision(int) [72]
-----------------------------------------------
                0.00    0.00   17370/2576991     FechoConvexo::merge(vector<Ponto2d>&, vector<Ponto2d>&) [13]
                0.00    0.00   21978/2576991     FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00   39569/2576991     FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
                0.01    0.00  502072/2576991     FechoConvexo::InsertionSort() [8]
                0.01    0.00  997002/2576991     FechoConvexo::temAngIgual() [12]
                0.01    0.00  999000/2576991     FechoConvexo::temAngIgual2(vector<Ponto2d>&, Ponto2d) [11]
[2]     56.9    0.03    0.01 2576991         Ponto2d::calcularAngulo(Ponto2d) [2]
                0.01    0.00 2576991/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00 2576991/3650389     Ponto2d::get_X() const [37]
-----------------------------------------------
                0.00    0.03       1/1           main [1]
[3]     43.1    0.00    0.03       1         FechoConvexo::GrahamMerge(vector<Ponto2d>) [3]
                0.00    0.03       1/1           FechoConvexo::MergeSort(vector<Ponto2d>&) [5]
                0.00    0.00    1981/5942        FechoConvexo::curvaEsquerda(Ponto2d, Ponto2d, Ponto2d) [20]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00    6943/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00    1983/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00    1000/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
                0.00    0.00     983/2950        vector<Ponto2d>::pop_back() [54]
-----------------------------------------------
                                1998             FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
                0.00    0.03       1/1           FechoConvexo::MergeSort(vector<Ponto2d>&) [5]
[4]     43.1    0.00    0.03       1+1998    FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
                0.00    0.02    1998/1998        vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&) [9]
                0.00    0.01     999/999         FechoConvexo::merge(vector<Ponto2d>&, vector<Ponto2d>&) [13]
                0.00    0.00   10975/23200       vector<Ponto2d>::iterator::operator!=(vector<Ponto2d>::iterator const&) const [45]
                0.00    0.00    9976/64873       vector<Ponto2d>::iterator::operator*() const [40]
                0.00    0.00    9976/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00    9976/20453       vector<Ponto2d>::iterator::operator++() [46]
                0.00    0.00    6993/6994        vector<Ponto2d>::iterator::operator+(int) const [52]
                0.00    0.00    4995/4997        vector<Ponto2d>::begin() const [53]
                0.00    0.00     999/1252        vector<Ponto2d>::end() const [57]
                                1998             FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
-----------------------------------------------
                0.00    0.03       1/1           FechoConvexo::GrahamMerge(vector<Ponto2d>) [3]
[5]     43.1    0.00    0.03       1         FechoConvexo::MergeSort(vector<Ponto2d>&) [5]
                0.00    0.03       1/1           FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
                0.00    0.00       1/1549423     vector<Ponto2d>::size() const [38]
-----------------------------------------------
                0.00    0.00       1/9027029     FechoConvexo::FechoConvexo(vector<Ponto2d>) [23]
                0.00    0.00       6/9027029     FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00      22/9027029     FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.01    0.00 3033000/9027029     vector<Ponto2d>::vector() [14]
                0.02    0.00 5994000/9027029     vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&) [9]
[6]     42.9    0.03    0.00 9027029         Ponto2d::Ponto2d() [6]
-----------------------------------------------
                0.00    0.02       1/1           main [1]
[7]     33.2    0.00    0.02       1         FechoConvexo::GrahamInsertion() [7]
                0.00    0.02       1/1           FechoConvexo::InsertionSort() [8]
                0.00    0.00    1980/5942        FechoConvexo::curvaEsquerda(Ponto2d, Ponto2d, Ponto2d) [20]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00    6956/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00    2000/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00    1000/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
                0.00    0.00     983/2950        vector<Ponto2d>::pop_back() [54]
                0.00    0.00      17/17          Ponto2d::imprimir() [59]
-----------------------------------------------
                0.00    0.02       1/1           FechoConvexo::GrahamInsertion() [7]
[8]     33.1    0.00    0.02       1         FechoConvexo::InsertionSort() [8]
                0.00    0.02       1/1           FechoConvexo::temAngIgual() [12]
                0.01    0.00  502072/2576991     Ponto2d::calcularAngulo(Ponto2d) [2]
                0.00    0.00  753126/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00       1/1549423     vector<Ponto2d>::size() const [38]
-----------------------------------------------
                0.00    0.02    1998/1998        FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
[9]     28.5    0.00    0.02    1998         vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&) [9]
                0.02    0.00 5994000/9027029     Ponto2d::Ponto2d() [6]
                0.00    0.00   11974/23200       vector<Ponto2d>::iterator::operator!=(vector<Ponto2d>::iterator const&) const [45]
                0.00    0.00    9976/64873       vector<Ponto2d>::iterator::operator*() const [40]
                0.00    0.00    9976/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
                0.00    0.00    9976/20453       vector<Ponto2d>::iterator::operator++() [46]
                0.00    0.00    1998/1998        vector<Ponto2d>::iterator::operator-(vector<Ponto2d>::iterator const&) const [56]
-----------------------------------------------
                0.00    0.02       1/1           main [1]
[10]    23.0    0.00    0.02       1         FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
                0.00    0.02       1/1           FechoConvexo::temAngIgual2(vector<Ponto2d>&, Ponto2d) [11]
                0.00    0.00       1/1           FechoConvexo::radixSort(vector<Ponto2d>&, Ponto2d) [17]
                0.00    0.00    1981/5942        FechoConvexo::curvaEsquerda(Ponto2d, Ponto2d, Ponto2d) [20]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00    6943/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00    1983/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00    1000/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
                0.00    0.00     983/2950        vector<Ponto2d>::pop_back() [54]
-----------------------------------------------
                0.00    0.02       1/1           FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
[11]    22.1    0.00    0.02       1         FechoConvexo::temAngIgual2(vector<Ponto2d>&, Ponto2d) [11]
                0.01    0.00  999000/2576991     Ponto2d::calcularAngulo(Ponto2d) [2]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00 1000000/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00  501501/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00    1000/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
-----------------------------------------------
                0.00    0.02       1/1           FechoConvexo::InsertionSort() [8]
[12]    22.0    0.00    0.02       1         FechoConvexo::temAngIgual() [12]
                0.01    0.00  997002/2576991     Ponto2d::calcularAngulo(Ponto2d) [2]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00  998001/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00  500500/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00     999/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
-----------------------------------------------
                0.00    0.01     999/999         FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
[13]    14.6    0.00    0.01     999         FechoConvexo::merge(vector<Ponto2d>&, vector<Ponto2d>&) [13]
                0.00    0.01     999/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00   17370/2576991     Ponto2d::calcularAngulo(Ponto2d) [2]
                0.00    0.00   27346/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00   22159/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00    9976/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
-----------------------------------------------
                0.00    0.00       1/1011        FechoConvexo::temElemRepetido() [26]
                0.00    0.00       1/1011        FechoConvexo::temAngIgual() [12]
                0.00    0.00       1/1011        FechoConvexo::temAngIgual2(vector<Ponto2d>&, Ponto2d) [11]
                0.00    0.00       1/1011        FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
                0.00    0.00       1/1011        FechoConvexo::GrahamInsertion() [7]
                0.00    0.00       1/1011        FechoConvexo::GrahamMerge(vector<Ponto2d>) [3]
                0.00    0.00       1/1011        FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00       1/1011        FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00       1/1011        FechoConvexo::Jarvis() [18]
                0.00    0.00       1/1011        main [1]
                0.00    0.00       2/1011        FechoConvexo::FechoConvexo(vector<Ponto2d>) [23]
                0.00    0.01     999/1011        FechoConvexo::merge(vector<Ponto2d>&, vector<Ponto2d>&) [13]
[14]    14.4    0.00    0.01    1011         vector<Ponto2d>::vector() [14]
                0.01    0.00 3033000/9027029     Ponto2d::Ponto2d() [6]
-----------------------------------------------
                0.00    0.00       2/2621050     FechoConvexo::RemoverP0() [29]
                0.00    0.00      28/2621050     FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00      48/2621050     FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00      98/2621050     FechoConvexo::temElemRepetido() [26]
                0.00    0.00     124/2621050     Ponto2d::calcularDist(Ponto2d) [28]
                0.00    0.00    2000/2621050     FechoConvexo::YMaior(vector<Ponto2d> const&) [27]
                0.00    0.00    2997/2621050     FechoConvexo::XMenor(vector<Ponto2d> const&, int) [25]
                0.00    0.00    3006/2621050     FechoConvexo::YMenor(vector<Ponto2d> const&) [24]
                0.00    0.00   11988/2621050     Ponto2d::calcularAnguloNegativo(Ponto2d) [22]
                0.00    0.00   23768/2621050     FechoConvexo::curvaEsquerda(Ponto2d, Ponto2d, Ponto2d) [20]
                0.01    0.00 2576991/2621050     Ponto2d::calcularAngulo(Ponto2d) [2]
[15]    14.3    0.01    0.00 2621050         Ponto2d::get_Y() const [15]
-----------------------------------------------
                               29966             FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
                0.00    0.00       1/1           FechoConvexo::radixSort(vector<Ponto2d>&, Ponto2d) [17]
[16]     0.9    0.00    0.00       1+29966   FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
                0.00    0.00   39569/2576991     Ponto2d::calcularAngulo(Ponto2d) [2]
                0.00    0.00  110383/110383      vector<Ponto2d>::iterator::operator<=(vector<Ponto2d>::iterator const&) const [39]
                0.00    0.00   44421/64873       vector<Ponto2d>::iterator::operator*() const [40]
                0.00    0.00   39569/39569       FechoConvexo::getBinaryDigit(float, int) [41]
                0.00    0.00   27967/27968       vector<Ponto2d>::iterator::operator==(vector<Ponto2d>::iterator const&) const [43]
                0.00    0.00   18101/18101       vector<Ponto2d>::iterator::operator++(int) [47]
                0.00    0.00   14983/14983       vector<Ponto2d>::iterator::operator-(int) const [48]
                0.00    0.00   13899/13899       vector<Ponto2d>::iterator::operator--(int) [49]
                0.00    0.00    2426/2426        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Ponto2d> >, std::is_move_constructible<Ponto2d>, std::is_move_assignable<Ponto2d> >::value, void>::type std::swap<Ponto2d>(Ponto2d&, Ponto2d&) [55]
                               29966             FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
-----------------------------------------------
                0.00    0.00       1/1           FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
[17]     0.9    0.00    0.00       1         FechoConvexo::radixSort(vector<Ponto2d>&, Ponto2d) [17]
                0.00    0.00       1/1           FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
                0.00    0.00       1/1252        vector<Ponto2d>::end() const [57]
                0.00    0.00       1/4997        vector<Ponto2d>::begin() const [53]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[18]     0.6    0.00    0.00       1         FechoConvexo::Jarvis() [18]
                0.00    0.00       1/1           FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00       1/1           FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00      19/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00      17/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00      17/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
-----------------------------------------------
                0.00    0.00       1/1           FechoConvexo::Jarvis() [18]
[19]     0.5    0.00    0.00       1         FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00   21978/2576991     Ponto2d::calcularAngulo(Ponto2d) [2]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00       1/3           FechoConvexo::YMenor(vector<Ponto2d> const&) [24]
                0.00    0.00       1/2           FechoConvexo::YMaior(vector<Ponto2d> const&) [27]
                0.00    0.00      71/124         Ponto2d::calcularDist(Ponto2d) [28]
                0.00    0.00      48/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00      22/9027029     Ponto2d::Ponto2d() [6]
                0.00    0.00   22002/3650389     Ponto2d::get_X() const [37]
                0.00    0.00   11071/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00   11011/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00      12/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
-----------------------------------------------
                0.00    0.00    1980/5942        FechoConvexo::GrahamInsertion() [7]
                0.00    0.00    1981/5942        FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
                0.00    0.00    1981/5942        FechoConvexo::GrahamMerge(vector<Ponto2d>) [3]
[20]     0.1    0.00    0.00    5942         FechoConvexo::curvaEsquerda(Ponto2d, Ponto2d, Ponto2d) [20]
                0.00    0.00   23768/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00   23768/3650389     Ponto2d::get_X() const [37]
-----------------------------------------------
                0.00    0.00       1/1           FechoConvexo::Jarvis() [18]
[21]     0.1    0.00    0.00       1         FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00   11988/11988       Ponto2d::calcularAnguloNegativo(Ponto2d) [22]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00       1/3           FechoConvexo::YMenor(vector<Ponto2d> const&) [24]
                0.00    0.00       1/2           FechoConvexo::YMaior(vector<Ponto2d> const&) [27]
                0.00    0.00      53/124         Ponto2d::calcularDist(Ponto2d) [28]
                0.00    0.00      28/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00       6/9027029     Ponto2d::Ponto2d() [6]
                0.00    0.00   12002/3650389     Ponto2d::get_X() const [37]
                0.00    0.00    6053/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00    6006/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00       6/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
                0.00    0.00       1/2950        vector<Ponto2d>::pop_back() [54]
-----------------------------------------------
                0.00    0.00   11988/11988       FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
[22]     0.1    0.00    0.00   11988         Ponto2d::calcularAnguloNegativo(Ponto2d) [22]
                0.00    0.00   11988/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00   11988/3650389     Ponto2d::get_X() const [37]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[23]     0.1    0.00    0.00       1         FechoConvexo::FechoConvexo(vector<Ponto2d>) [23]
                0.00    0.00       2/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00       1/1           FechoConvexo::temElemRepetido() [26]
                0.00    0.00       1/3           FechoConvexo::YMenor(vector<Ponto2d> const&) [24]
                0.00    0.00       1/1           FechoConvexo::RemoverP0() [29]
                0.00    0.00       1/9027029     Ponto2d::Ponto2d() [6]
-----------------------------------------------
                0.00    0.00       1/3           FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00       1/3           FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00       1/3           FechoConvexo::FechoConvexo(vector<Ponto2d>) [23]
[24]     0.0    0.00    0.00       3         FechoConvexo::YMenor(vector<Ponto2d> const&) [24]
                0.00    0.00    3006/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00       3/3           FechoConvexo::XMenor(vector<Ponto2d> const&, int) [25]
                0.00    0.00    3003/11019       vector<Ponto2d>::operator[](int) const [50]
                0.00    0.00       3/1549423     vector<Ponto2d>::size() const [38]
-----------------------------------------------
                0.00    0.00       3/3           FechoConvexo::YMenor(vector<Ponto2d> const&) [24]
[25]     0.0    0.00    0.00       3         FechoConvexo::XMenor(vector<Ponto2d> const&, int) [25]
                0.00    0.00    2997/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00    6000/11019       vector<Ponto2d>::operator[](int) const [50]
                0.00    0.00    3000/3650389     Ponto2d::get_X() const [37]
                0.00    0.00       3/1549423     vector<Ponto2d>::size() const [38]
-----------------------------------------------
                0.00    0.00       1/1           FechoConvexo::FechoConvexo(vector<Ponto2d>) [23]
[26]     0.0    0.00    0.00       1         FechoConvexo::temElemRepetido() [26]
                0.00    0.00       1/1011        vector<Ponto2d>::vector() [14]
                0.00    0.00      98/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00 1000098/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00  999000/3650389     Ponto2d::get_X() const [37]
                0.00    0.00  501501/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00    1000/26986       vector<Ponto2d>::push_back(Ponto2d const&) [44]
-----------------------------------------------
                0.00    0.00       1/2           FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00       1/2           FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
[27]     0.0    0.00    0.00       2         FechoConvexo::YMaior(vector<Ponto2d> const&) [27]
                0.00    0.00    2000/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00    2016/11019       vector<Ponto2d>::operator[](int) const [50]
                0.00    0.00      14/3650389     Ponto2d::get_X() const [37]
                0.00    0.00       2/1549423     vector<Ponto2d>::size() const [38]
-----------------------------------------------
                0.00    0.00      53/124         FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00      71/124         FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
[28]     0.0    0.00    0.00     124         Ponto2d::calcularDist(Ponto2d) [28]
                0.00    0.00     124/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00     124/3650389     Ponto2d::get_X() const [37]
-----------------------------------------------
                0.00    0.00       1/1           FechoConvexo::FechoConvexo(vector<Ponto2d>) [23]
[29]     0.0    0.00    0.00       1         FechoConvexo::RemoverP0() [29]
                0.00    0.00       2/2621050     Ponto2d::get_Y() const [15]
                0.00    0.00    1500/3650389     Ponto2d::get_X() const [37]
                0.00    0.00     751/3827281     vector<Ponto2d>::operator[](int) [36]
                0.00    0.00     750/1549423     vector<Ponto2d>::size() const [38]
                0.00    0.00       1/4997        vector<Ponto2d>::begin() const [53]
                0.00    0.00       1/6994        vector<Ponto2d>::iterator::operator+(int) const [52]
                0.00    0.00       1/1           vector<Ponto2d>::erase(vector<Ponto2d>::iterator) [83]
-----------------------------------------------
                0.00    0.00      17/3827281     FechoConvexo::Jarvis() [18]
                0.00    0.00     751/3827281     FechoConvexo::RemoverP0() [29]
                0.00    0.00    6053/3827281     FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00    6943/3827281     FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
                0.00    0.00    6943/3827281     FechoConvexo::GrahamMerge(vector<Ponto2d>) [3]
                0.00    0.00    6956/3827281     FechoConvexo::GrahamInsertion() [7]
                0.00    0.00    9976/3827281     FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
                0.00    0.00   11071/3827281     FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00   27346/3827281     FechoConvexo::merge(vector<Ponto2d>&, vector<Ponto2d>&) [13]
                0.00    0.00  753126/3827281     FechoConvexo::InsertionSort() [8]
                0.00    0.00  998001/3827281     FechoConvexo::temAngIgual() [12]
                0.00    0.00 1000000/3827281     FechoConvexo::temAngIgual2(vector<Ponto2d>&, Ponto2d) [11]
                0.00    0.00 1000098/3827281     FechoConvexo::temElemRepetido() [26]
[36]     0.0    0.00    0.00 3827281         vector<Ponto2d>::operator[](int) [36]
-----------------------------------------------
                0.00    0.00      14/3650389     FechoConvexo::YMaior(vector<Ponto2d> const&) [27]
                0.00    0.00     124/3650389     Ponto2d::calcularDist(Ponto2d) [28]
                0.00    0.00    1500/3650389     FechoConvexo::RemoverP0() [29]
                0.00    0.00    3000/3650389     FechoConvexo::XMenor(vector<Ponto2d> const&, int) [25]
                0.00    0.00   11988/3650389     Ponto2d::calcularAnguloNegativo(Ponto2d) [22]
                0.00    0.00   12002/3650389     FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00   22002/3650389     FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00   23768/3650389     FechoConvexo::curvaEsquerda(Ponto2d, Ponto2d, Ponto2d) [20]
                0.00    0.00  999000/3650389     FechoConvexo::temElemRepetido() [26]
                0.00    0.00 2576991/3650389     Ponto2d::calcularAngulo(Ponto2d) [2]
[37]     0.0    0.00    0.00 3650389         Ponto2d::get_X() const [37]
-----------------------------------------------
                0.00    0.00       1/1549423     FechoConvexo::InsertionSort() [8]
                0.00    0.00       1/1549423     FechoConvexo::MergeSort(vector<Ponto2d>&) [5]
                0.00    0.00       2/1549423     FechoConvexo::YMaior(vector<Ponto2d> const&) [27]
                0.00    0.00       3/1549423     FechoConvexo::XMenor(vector<Ponto2d> const&, int) [25]
                0.00    0.00       3/1549423     FechoConvexo::YMenor(vector<Ponto2d> const&) [24]
                0.00    0.00      19/1549423     FechoConvexo::Jarvis() [18]
                0.00    0.00     750/1549423     FechoConvexo::RemoverP0() [29]
                0.00    0.00    1983/1549423     FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
                0.00    0.00    1983/1549423     FechoConvexo::GrahamMerge(vector<Ponto2d>) [3]
                0.00    0.00    2000/1549423     FechoConvexo::GrahamInsertion() [7]
                0.00    0.00    6006/1549423     FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00   11011/1549423     FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00   22159/1549423     FechoConvexo::merge(vector<Ponto2d>&, vector<Ponto2d>&) [13]
                0.00    0.00  500500/1549423     FechoConvexo::temAngIgual() [12]
                0.00    0.00  501501/1549423     FechoConvexo::temElemRepetido() [26]
                0.00    0.00  501501/1549423     FechoConvexo::temAngIgual2(vector<Ponto2d>&, Ponto2d) [11]
[38]     0.0    0.00    0.00 1549423         vector<Ponto2d>::size() const [38]
-----------------------------------------------
                0.00    0.00  110383/110383      FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
[39]     0.0    0.00    0.00  110383         vector<Ponto2d>::iterator::operator<=(vector<Ponto2d>::iterator const&) const [39]
-----------------------------------------------
                0.00    0.00     500/64873       vector<Ponto2d>::erase(vector<Ponto2d>::iterator) [83]
                0.00    0.00    9976/64873       FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
                0.00    0.00    9976/64873       vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&) [9]
                0.00    0.00   44421/64873       FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
[40]     0.0    0.00    0.00   64873         vector<Ponto2d>::iterator::operator*() const [40]
-----------------------------------------------
                0.00    0.00   39569/39569       FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
[41]     0.0    0.00    0.00   39569         FechoConvexo::getBinaryDigit(float, int) [41]
-----------------------------------------------
                0.00    0.00    1252/28226       vector<Ponto2d>::end() const [57]
                0.00    0.00    4997/28226       vector<Ponto2d>::begin() const [53]
                0.00    0.00    6994/28226       vector<Ponto2d>::iterator::operator+(int) const [52]
                0.00    0.00   14983/28226       vector<Ponto2d>::iterator::operator-(int) const [48]
[42]     0.0    0.00    0.00   28226         vector<Ponto2d>::iterator::iterator(Ponto2d*) [42]
-----------------------------------------------
                0.00    0.00       1/27968       vector<Ponto2d>::erase(vector<Ponto2d>::iterator) [83]
                0.00    0.00   27967/27968       FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
[43]     0.0    0.00    0.00   27968         vector<Ponto2d>::iterator::operator==(vector<Ponto2d>::iterator const&) const [43]
-----------------------------------------------
                0.00    0.00       6/26986       FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00      12/26986       FechoConvexo::JarvisRight(vector<Ponto2d>) [19]
                0.00    0.00      17/26986       FechoConvexo::Jarvis() [18]
                0.00    0.00     999/26986       FechoConvexo::temAngIgual() [12]
                0.00    0.00    1000/26986       FechoConvexo::temElemRepetido() [26]
                0.00    0.00    1000/26986       FechoConvexo::temAngIgual2(vector<Ponto2d>&, Ponto2d) [11]
                0.00    0.00    1000/26986       FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
                0.00    0.00    1000/26986       FechoConvexo::GrahamInsertion() [7]
                0.00    0.00    1000/26986       FechoConvexo::GrahamMerge(vector<Ponto2d>) [3]
                0.00    0.00    1000/26986       main [1]
                0.00    0.00    9976/26986       FechoConvexo::merge(vector<Ponto2d>&, vector<Ponto2d>&) [13]
                0.00    0.00    9976/26986       vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&) [9]
[44]     0.0    0.00    0.00   26986         vector<Ponto2d>::push_back(Ponto2d const&) [44]
-----------------------------------------------
                0.00    0.00     251/23200       vector<Ponto2d>::erase(vector<Ponto2d>::iterator) [83]
                0.00    0.00   10975/23200       FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
                0.00    0.00   11974/23200       vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&) [9]
[45]     0.0    0.00    0.00   23200         vector<Ponto2d>::iterator::operator!=(vector<Ponto2d>::iterator const&) const [45]
-----------------------------------------------
                0.00    0.00     501/20453       vector<Ponto2d>::erase(vector<Ponto2d>::iterator) [83]
                0.00    0.00    9976/20453       FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
                0.00    0.00    9976/20453       vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&) [9]
[46]     0.0    0.00    0.00   20453         vector<Ponto2d>::iterator::operator++() [46]
-----------------------------------------------
                0.00    0.00   18101/18101       FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
[47]     0.0    0.00    0.00   18101         vector<Ponto2d>::iterator::operator++(int) [47]
-----------------------------------------------
                0.00    0.00   14983/14983       FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
[48]     0.0    0.00    0.00   14983         vector<Ponto2d>::iterator::operator-(int) const [48]
                0.00    0.00   14983/28226       vector<Ponto2d>::iterator::iterator(Ponto2d*) [42]
-----------------------------------------------
                0.00    0.00   13899/13899       FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
[49]     0.0    0.00    0.00   13899         vector<Ponto2d>::iterator::operator--(int) [49]
-----------------------------------------------
                0.00    0.00    2016/11019       FechoConvexo::YMaior(vector<Ponto2d> const&) [27]
                0.00    0.00    3003/11019       FechoConvexo::YMenor(vector<Ponto2d> const&) [24]
                0.00    0.00    6000/11019       FechoConvexo::XMenor(vector<Ponto2d> const&, int) [25]
[50]     0.0    0.00    0.00   11019         vector<Ponto2d>::operator[](int) const [50]
-----------------------------------------------
                0.00    0.00    7278/7278        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Ponto2d> >, std::is_move_constructible<Ponto2d>, std::is_move_assignable<Ponto2d> >::value, void>::type std::swap<Ponto2d>(Ponto2d&, Ponto2d&) [55]
[51]     0.0    0.00    0.00    7278         std::remove_reference<Ponto2d&>::type&& std::move<Ponto2d&>(Ponto2d&) [51]
-----------------------------------------------
                0.00    0.00       1/6994        FechoConvexo::RemoverP0() [29]
                0.00    0.00    6993/6994        FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
[52]     0.0    0.00    0.00    6994         vector<Ponto2d>::iterator::operator+(int) const [52]
                0.00    0.00    6994/28226       vector<Ponto2d>::iterator::iterator(Ponto2d*) [42]
-----------------------------------------------
                0.00    0.00       1/4997        FechoConvexo::RemoverP0() [29]
                0.00    0.00       1/4997        FechoConvexo::radixSort(vector<Ponto2d>&, Ponto2d) [17]
                0.00    0.00    4995/4997        FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
[53]     0.0    0.00    0.00    4997         vector<Ponto2d>::begin() const [53]
                0.00    0.00    4997/28226       vector<Ponto2d>::iterator::iterator(Ponto2d*) [42]
-----------------------------------------------
                0.00    0.00       1/2950        FechoConvexo::JarvisLeft(vector<Ponto2d>) [21]
                0.00    0.00     983/2950        FechoConvexo::GrahamRadix(vector<Ponto2d>) [10]
                0.00    0.00     983/2950        FechoConvexo::GrahamInsertion() [7]
                0.00    0.00     983/2950        FechoConvexo::GrahamMerge(vector<Ponto2d>) [3]
[54]     0.0    0.00    0.00    2950         vector<Ponto2d>::pop_back() [54]
-----------------------------------------------
                0.00    0.00    2426/2426        FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [16]
[55]     0.0    0.00    0.00    2426         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Ponto2d> >, std::is_move_constructible<Ponto2d>, std::is_move_assignable<Ponto2d> >::value, void>::type std::swap<Ponto2d>(Ponto2d&, Ponto2d&) [55]
                0.00    0.00    7278/7278        std::remove_reference<Ponto2d&>::type&& std::move<Ponto2d&>(Ponto2d&) [51]
-----------------------------------------------
                0.00    0.00    1998/1998        vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&) [9]
[56]     0.0    0.00    0.00    1998         vector<Ponto2d>::iterator::operator-(vector<Ponto2d>::iterator const&) const [56]
-----------------------------------------------
                0.00    0.00       1/1252        FechoConvexo::radixSort(vector<Ponto2d>&, Ponto2d) [17]
                0.00    0.00     252/1252        vector<Ponto2d>::erase(vector<Ponto2d>::iterator) [83]
                0.00    0.00     999/1252        FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [4]
[57]     0.0    0.00    0.00    1252         vector<Ponto2d>::end() const [57]
                0.00    0.00    1252/28226       vector<Ponto2d>::iterator::iterator(Ponto2d*) [42]
-----------------------------------------------
                0.00    0.00    1000/1000        main [1]
[58]     0.0    0.00    0.00    1000         Ponto2d::Ponto2d(int, int) [58]
-----------------------------------------------
                0.00    0.00      17/17          FechoConvexo::GrahamInsertion() [7]
[59]     0.0    0.00    0.00      17         Ponto2d::imprimir() [59]
-----------------------------------------------
                0.00    0.00       4/12          std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [65]
                0.00    0.00       8/12          std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [70]
[60]     0.0    0.00    0.00      12         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [60]
-----------------------------------------------
                0.00    0.00       8/8           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [69]
[61]     0.0    0.00    0.00       8         std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [61]
-----------------------------------------------
                0.00    0.00       4/8           main [1]
                0.00    0.00       4/8           std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [66]
[62]     0.0    0.00    0.00       8         std::chrono::duration<double, std::ratio<1l, 1l> >::count() const [62]
-----------------------------------------------
                0.00    0.00       4/8           std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [73]
                0.00    0.00       4/8           std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [71]
[63]     0.0    0.00    0.00       8         std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [63]
-----------------------------------------------
                0.00    0.00       4/4           std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [66]
[64]     0.0    0.00    0.00       4         std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [64]
                0.00    0.00       4/4           std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [65]
-----------------------------------------------
                0.00    0.00       4/4           std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [64]
[65]     0.0    0.00    0.00       4         std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [65]
                0.00    0.00       4/12          std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [60]
                0.00    0.00       4/4           std::chrono::duration<double, std::ratio<1l, 1l> >::duration<double, void>(double const&) [67]
-----------------------------------------------
                0.00    0.00       4/4           main [1]
[66]     0.0    0.00    0.00       4         std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [66]
                0.00    0.00       4/4           std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [64]
                0.00    0.00       4/8           std::chrono::duration<double, std::ratio<1l, 1l> >::count() const [62]
-----------------------------------------------
                0.00    0.00       4/4           std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [65]
[67]     0.0    0.00    0.00       4         std::chrono::duration<double, std::ratio<1l, 1l> >::duration<double, void>(double const&) [67]
-----------------------------------------------
                0.00    0.00       4/4           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [70]
[68]     0.0    0.00    0.00       4         std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [68]
-----------------------------------------------
                0.00    0.00       4/4           main [1]
[69]     0.0    0.00    0.00       4         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [69]
                0.00    0.00       8/8           std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const [61]
                0.00    0.00       4/4           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [70]
-----------------------------------------------
                0.00    0.00       4/4           std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&) [69]
[70]     0.0    0.00    0.00       4         std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&) [70]
                0.00    0.00       8/12          std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const [60]
                0.00    0.00       4/4           std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&) [68]
-----------------------------------------------
                0.00    0.00       4/4           std::fixed(std::ios_base&) [86]
[71]     0.0    0.00    0.00       4         std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [71]
                0.00    0.00       4/4           std::operator~(std::_Ios_Fmtflags) [74]
                0.00    0.00       4/4           std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [73]
                0.00    0.00       4/8           std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [63]
                0.00    0.00       4/4           std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [75]
-----------------------------------------------
                0.00    0.00       4/4           main [1]
[72]     0.0    0.00    0.00       4         std::setprecision(int) [72]
-----------------------------------------------
                0.00    0.00       4/4           std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [71]
[73]     0.0    0.00    0.00       4         std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [73]
                0.00    0.00       4/8           std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [63]
-----------------------------------------------
                0.00    0.00       4/4           std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [71]
[74]     0.0    0.00    0.00       4         std::operator~(std::_Ios_Fmtflags) [74]
-----------------------------------------------
                0.00    0.00       4/4           std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [71]
[75]     0.0    0.00    0.00       4         std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [75]
                0.00    0.00       4/4           std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [76]
-----------------------------------------------
                0.00    0.00       4/4           std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags) [75]
[76]     0.0    0.00    0.00       4         std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags) [76]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [90]
[77]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN12FechoConvexo6XMenorERK6vectorI7Ponto2dEi [77]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [81]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [90]
[78]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN7Ponto2dC2Ev [78]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [80]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [90]
[79]     0.0    0.00    0.00       1         _GLOBAL__sub_I_main [79]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [82]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN7Ponto2dC2Ev [78]
[80]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [80]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN12FechoConvexo6XMenorERK6vectorI7Ponto2dEi [77]
[81]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [81]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [79]
[82]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [82]
-----------------------------------------------
                0.00    0.00       1/1           FechoConvexo::RemoverP0() [29]
[83]     0.0    0.00    0.00       1         vector<Ponto2d>::erase(vector<Ponto2d>::iterator) [83]
                0.00    0.00     501/20453       vector<Ponto2d>::iterator::operator++() [46]
                0.00    0.00     500/64873       vector<Ponto2d>::iterator::operator*() const [40]
                0.00    0.00     252/1252        vector<Ponto2d>::end() const [57]
                0.00    0.00     251/23200       vector<Ponto2d>::iterator::operator!=(vector<Ponto2d>::iterator const&) const [45]
                0.00    0.00       1/27968       vector<Ponto2d>::iterator::operator==(vector<Ponto2d>::iterator const&) const [43]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [77] _GLOBAL__sub_I__ZN12FechoConvexo6XMenorERK6vectorI7Ponto2dEi [17] FechoConvexo::radixSort(vector<Ponto2d>&, Ponto2d) [45] vector<Ponto2d>::iterator::operator!=(vector<Ponto2d>::iterator const&) const
  [78] _GLOBAL__sub_I__ZN7Ponto2dC2Ev [23] FechoConvexo::FechoConvexo(vector<Ponto2d>) [52] vector<Ponto2d>::iterator::operator+(int) const
  [79] _GLOBAL__sub_I_main    [83] vector<Ponto2d>::erase(vector<Ponto2d>::iterator) [50] vector<Ponto2d>::operator[](int) const
  [80] __static_initialization_and_destruction_0(int, int) [42] vector<Ponto2d>::iterator::iterator(Ponto2d*) [37] Ponto2d::get_X() const
  [81] __static_initialization_and_destruction_0(int, int) [49] vector<Ponto2d>::iterator::operator--(int) [15] Ponto2d::get_Y() const
  [82] __static_initialization_and_destruction_0(int, int) [47] vector<Ponto2d>::iterator::operator++(int) [61] std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const
  [21] FechoConvexo::JarvisLeft(vector<Ponto2d>) [46] vector<Ponto2d>::iterator::operator++() [62] std::chrono::duration<double, std::ratio<1l, 1l> >::count() const
   [4] FechoConvexo::MergeSort2(vector<Ponto2d>&, int, int) [54] vector<Ponto2d>::pop_back() [60] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const
  [16] FechoConvexo::quicksortB(vector<Ponto2d>::iterator, vector<Ponto2d>::iterator, int, Ponto2d) [44] vector<Ponto2d>::push_back(Ponto2d const&) [64] std::enable_if<std::chrono::__is_duration<std::chrono::duration<double, std::ratio<1l, 1l> > >::value, std::chrono::duration<double, std::ratio<1l, 1l> > >::type std::chrono::duration_cast<std::chrono::duration<double, std::ratio<1l, 1l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
   [3] FechoConvexo::GrahamMerge(vector<Ponto2d>) [14] vector<Ponto2d>::vector() [65] std::chrono::duration<double, std::ratio<1l, 1l> > std::chrono::__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1l> >, std::ratio<1l, 1000000000l>, double, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  [10] FechoConvexo::GrahamRadix(vector<Ponto2d>) [9] vector<Ponto2d>::vector(vector<Ponto2d>::iterator const&, vector<Ponto2d>::iterator const&) [66] std::chrono::duration<double, std::ratio<1l, 1l> >::duration<long, std::ratio<1l, 1000000000l>, void>(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  [19] FechoConvexo::JarvisRight(vector<Ponto2d>) [36] vector<Ponto2d>::operator[](int) [67] std::chrono::duration<double, std::ratio<1l, 1l> >::duration<double, void>(double const&)
  [12] FechoConvexo::temAngIgual() [28] Ponto2d::calcularDist(Ponto2d) [68] std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
  [11] FechoConvexo::temAngIgual2(vector<Ponto2d>&, Ponto2d) [2] Ponto2d::calcularAngulo(Ponto2d) [69] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
   [8] FechoConvexo::InsertionSort() [22] Ponto2d::calcularAnguloNegativo(Ponto2d) [70] std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
  [20] FechoConvexo::curvaEsquerda(Ponto2d, Ponto2d, Ponto2d) [59] Ponto2d::imprimir() [71] std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [41] FechoConvexo::getBinaryDigit(float, int) [58] Ponto2d::Ponto2d(int, int) [72] std::setprecision(int)
   [7] FechoConvexo::GrahamInsertion() [6] Ponto2d::Ponto2d() [51] std::remove_reference<Ponto2d&>::type&& std::move<Ponto2d&>(Ponto2d&)
  [26] FechoConvexo::temElemRepetido() [57] vector<Ponto2d>::end() const [55] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Ponto2d> >, std::is_move_constructible<Ponto2d>, std::is_move_assignable<Ponto2d> >::value, void>::type std::swap<Ponto2d>(Ponto2d&, Ponto2d&)
  [13] FechoConvexo::merge(vector<Ponto2d>&, vector<Ponto2d>&) [38] vector<Ponto2d>::size() const [73] std::operator&=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  [18] FechoConvexo::Jarvis() [53] vector<Ponto2d>::begin() const [63] std::operator&(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
  [25] FechoConvexo::XMenor(vector<Ponto2d> const&, int) [40] vector<Ponto2d>::iterator::operator*() const [74] std::operator~(std::_Ios_Fmtflags)
  [27] FechoConvexo::YMaior(vector<Ponto2d> const&) [43] vector<Ponto2d>::iterator::operator==(vector<Ponto2d>::iterator const&) const [75] std::operator|=(std::_Ios_Fmtflags&, std::_Ios_Fmtflags)
  [24] FechoConvexo::YMenor(vector<Ponto2d> const&) [39] vector<Ponto2d>::iterator::operator<=(vector<Ponto2d>::iterator const&) const [76] std::operator|(std::_Ios_Fmtflags, std::_Ios_Fmtflags)
   [5] FechoConvexo::MergeSort(vector<Ponto2d>&) [56] vector<Ponto2d>::iterator::operator-(vector<Ponto2d>::iterator const&) const
  [29] FechoConvexo::RemoverP0() [48] vector<Ponto2d>::iterator::operator-(int) const
